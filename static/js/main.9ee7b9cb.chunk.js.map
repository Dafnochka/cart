{"version":3,"sources":["reducers/index.js","reducers/dataReducer.js","reducers/viewReducer.js","store/store.js","components/layout/__menu/Layout__Menu.js","components/layout/__menu-item/Layout__MenuItem.js","components/layout/Layout.js","actions/dataActions.js","actions/viewActions.js","components/main/Main.js","components/goods/__good/Goods__good.js","components/goods/__header/Goods__Header.js","components/goods/Goods.js","components/shopping-cart/ShoppingCart.js","components/app/App.js","components/page-not-found/PageNotFound.js","serviceWorker.js","index.js"],"names":["combineReducers","data","state","arguments","length","undefined","action","type","payload","checked","newData","Object","objectSpread","view","chartType","brand","logger","createLogger","middleware","applyMiddleware","promise","thunk","createStore","reducer","Menu","react_default","a","createElement","className","react_router_es","to","this","props","children","React","Component","connect","MenuItem","active","href","Layout","dispatch","setView","window","location","pathname","Layout_Menu","Layout_MenuItem_MenuItem","isActive","getData","setState","Main","Goods__good","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","id","check","store","idField","_this2","result","segment","i","priceSegment","String","fromCharCode","key","comments","index_es","icon","faComment","onClick","faCheckSquare","faSquare","push","Goods__Header","Goods","unit","filter","good","resultType","goods","forEach","_good_Goods_good","name","rating","trand","Goods_Header_Goods_Header","advantages","ShoppingCart","advantageBlock","map","advantage","index","join","App","es","history","browserHistory","path","component","Boolean","hostname","match","ReactDOM","render","components_app_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9ee7b9cb.chunk.js","sourcesContent":["import {combineReducers} from \"redux\"\r\n\r\nimport dataReducer from \"./dataReducer\"\r\nimport viewReducer from \"./viewReducer\"\r\n\r\nexport default combineReducers({\r\n        data: dataReducer,\r\n        view: viewReducer,\r\n    }\r\n)","export default function reducer(state={data:[]},\r\n                                action) {\r\n\r\n    switch (action.type) {\r\n        case \"FETCH_DATA\": {\r\n            return {data: action.payload}\r\n        }\r\n\r\n        case \"CHECK\": {\r\n            let checked =state.data[action.payload].checked;\r\n            let newData={...state};\r\n            newData.data[action.payload].checked=!checked;\r\n            return {\r\n                ...newData\r\n            }\r\n        }\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return state\r\n}","export default function reducer(state = {\r\n    view: 'day',\r\n    chartType: \"ColumnChart\",\r\n    brand: 'Guketleva task'\r\n}, action) {\r\n    let chartType = \"ColumnChart\";\r\n\r\n    switch (action.type) {\r\n        case \"SET_VIEW\": {\r\n            switch (action.payload) {\r\n                case \"day\": {\r\n                    chartType = \"LineChart\";\r\n                    break;\r\n                }\r\n                case 'month': {\r\n                    chartType = \"ColumnChart\";\r\n                    break;\r\n                }\r\n                case 'year': {\r\n                    chartType = \"ColumnChart\";\r\n                    break;\r\n                }\r\n                default:\r\n                    break;\r\n            }\r\n\r\n            return {...state, view: action.payload, chartType: chartType};\r\n        }\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return state;\r\n}","import { applyMiddleware, createStore } from 'redux';\r\n\r\nimport createLogger from 'redux-logger';\r\nimport thunk from 'redux-thunk';\r\nimport promise from 'redux-promise-middleware';\r\n\r\nimport reducer from '../reducers/index';\r\nconst logger=createLogger;\r\n\r\nconst middleware = applyMiddleware(promise, thunk, logger);\r\n\r\nexport default createStore(reducer, middleware);\r\n\r\n\r\n","import React from 'react';\r\nimport {Link} from 'react-router';\r\nimport connect from \"react-redux/es/connect/connect\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nclass Menu extends React.Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                <div className=\"container\">\r\n                    <Link to=\"/\" className=\"navbar-brand\">{this.props.brand}</Link>\r\n\r\n                    <div className=\"collapse navbar-collapse\">\r\n                        <ul className=\"navbar-nav\">\r\n                            {this.props.children}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        data: state.data.data,\r\n        view: state.view.view,\r\n        brand: state.view.brand,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Menu);","import React from 'react';\r\nimport {Link} from 'react-router';\r\n\r\n\r\nexport default class MenuItem extends React.Component {\r\n    render() {\r\n        return (\r\n            <li className={this.props.active ? 'nav-item active' : 'nav-item'}>\r\n                <Link className=\"nav-link\" to={this.props.href}>\r\n                    {this.props.children}\r\n                </Link>\r\n            </li>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport {connect} from 'react-redux';\r\nimport {getData} from '../../actions/dataActions';\r\nimport {setView} from '../../actions/viewActions';\r\nimport './Lyout.css';\r\nimport Layout__Menu from './__menu/Layout__Menu';\r\nimport Layout__MenuItem from './__menu-item/Layout__MenuItem';\r\n\r\nclass Layout extends React.Component {\r\n\r\n\r\n    getData() {\r\n        this.props.dispatch(getData());\r\n    }\r\n\r\n    setView(type) {\r\n        this.props.dispatch(setView(type));\r\n    }\r\n    isActive(href){\r\n        return window.location.pathname === href;\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        return <div>\r\n\r\n            <Layout__Menu brand={this.brand}>\r\n                <Layout__MenuItem href=\"/\" active={this.isActive('/')}>\r\n                    Главная\r\n                </Layout__MenuItem>\r\n                <Layout__MenuItem href=\"/goods\" active={this.isActive('/goods')}>\r\n                    Товары\r\n                </Layout__MenuItem>\r\n                <Layout__MenuItem href=\"/shopping_cart\" active={this.isActive('/shopping_cart')}>\r\n                    Корзина\r\n                </Layout__MenuItem>\r\n            </Layout__Menu>\r\n                        {this.props.children}\r\n\r\n            <footer className=\"card-footer\">\r\n                &copy; Гукетлева Дарья 2019г.\r\n            </footer>\r\n        </div>\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        // this.props.dispatch(fetchUser())\r\n        this.getData();\r\n        this.setState({\r\n            chartType: this.props.chartType\r\n        })\r\n\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        data: state.data.data,\r\n        view: state.view.view,\r\n        chartType: state.view.chartType,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Layout);","import data from './data'\r\n\r\n\r\nexport function getData() {\r\n    return {\r\n        type: \"FETCH_DATA\",\r\n        payload: data\r\n    }\r\n}\r\nexport function check(id) {\r\n    return {\r\n        type: \"CHECK\",\r\n        payload: id\r\n    }\r\n}","export function setView(type) {\r\n    return {\r\n        type: \"SET_VIEW\",\r\n        payload: type\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nexport default class Main extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <h1>Главная страница</h1>\r\n                <h2>Тестовое задание.</h2>\r\n                <p>1.Создать 2 страницы (используя react-router 3.2.0 и выше): /goods/ и /shopping_cart/</p>\r\n                <p>2.На странице /goods/ :</p>\r\n                <p>- сверстать небольшую табличку как на картинке «goods_невыбрано.png»</p>\r\n                <p>-При клике по чекбоксам (картинка «goods_выбрано.png») : менять стиль чекбокса, менять стиль плашки\r\n                    внизу, менять цифру в плашке и окончание слова “товар”. Если ни один чекбокс не отмечен –\r\n                    возвращаемся к виду с картинки «goods_невыбрано.png»</p>\r\n                <p>-При клике по кнопке «Перейти в корзину» – переходим на страницу /shopping_cart/</p>\r\n                <p>3.На странице /shopping_cart/:</p>\r\n                <p>-сверстать то, что на картинке «прототип_корзины.png»</p>\r\n                <p>-В строке “Вы выбрали” выводим общее количество выбранных на странице /goods/ товаров и их\r\n                    названия.</p>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport './Goods__good.css';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faComment, faCheckSquare, faSquare} from '@fortawesome/free-solid-svg-icons';\r\nimport {connect} from 'react-redux';\r\n\r\nclass Goods__good extends React.Component {\r\nconstructor(props){\r\n    super(props);\r\n    this.state={checked: false}\r\n}\r\n    check(id) {\r\n        this.props.check(id);\r\n        // this.props.dispatch(check(id));\r\n        this.setState({\r\n            checked:!this.state.checked\r\n        })\r\n    }\r\n    componentDidMount(){\r\n        if(this.props.store){\r\n            this.setState({\r\n                checked:this.props.store[this.props.idField-1].checked\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let result = [];\r\n        let data = {...this.props};\r\n        let segment = '';\r\n        for (let i = 0; i < this.props.priceSegment; i++) {\r\n            segment += String.fromCharCode(8381) + ' ';\r\n        }\r\n        data.priceSegment = <div className='segment'>{segment}</div>;\r\n        if (!this.props.comments) {\r\n            data.comments = '';\r\n        } else {\r\n            data.comments = [<FontAwesomeIcon key='comments' icon={faComment}/>, this.props.comments]\r\n        }\r\n\r\n\r\n\r\n        if (this.state.checked) {\r\n            data.checked = <FontAwesomeIcon onClick={()=>this.check(this.props.idField-1)} icon={faCheckSquare}/>;\r\n        } else {\r\n            data.checked = <FontAwesomeIcon onClick={()=>this.check(this.props.idField-1)} icon={faSquare}/>;\r\n        }\r\n        data.store=null;\r\n\r\n        for (let key in data) {\r\n            result.push(<div key={key} className={key}>{data[key]}</div>)\r\n        }\r\n\r\n        return (\r\n            <li className='Goods__good'>\r\n                {result}\r\n            </li>\r\n        );\r\n    }\r\n}\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        store: state.data.data,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Goods__good);","import React from 'react';\r\nimport './Goods__Header.css'\r\n\r\nexport default class Goods__Header extends React.Component {\r\n    render() {\r\n        let result = [];\r\n        for (let key in this.props) {\r\n            result.push(<div  key={key} className={key}>{this.props[key]}</div>)\r\n        }\r\n\r\n        return (\r\n            <li className='Goods__Header'>\r\n                {result}\r\n            </li>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport connect from \"react-redux/es/connect/connect\";\r\nimport './Goods.css';\r\nimport Goods__good from './__good/Goods__good'\r\nimport Goods__Header from \"./__header/Goods__Header\";\r\nimport {check} from \"../../actions/dataActions\";\r\nimport {Link} from \"react-router\";\r\n\r\nclass Goods extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={checked: false}\r\n    }\r\n    check(id) {\r\n        this.props.dispatch(check(id));\r\n        this.setState({\r\n            checked:!this.state.checked\r\n        })\r\n    }\r\n\r\n    render(props) {\r\n        let checked = this.props.data.filter((good) => good.checked);\r\n        let resultType = checked.length ? 'result filled' : 'result empty';\r\n        let unit;\r\n        switch (checked.length) {\r\n            case 0: {\r\n                unit = '';\r\n                break;\r\n            }\r\n            case 1: {\r\n                unit = 'товар';\r\n                break;\r\n            }\r\n            case 2: {\r\n                unit = 'товара';\r\n                break;\r\n            }\r\n            case 3: {\r\n                unit = 'товара';\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n        let result = checked.length ? [<div>Вы выбрали</div>,\r\n                <div className='number'>{checked.length}</div>,\r\n                <div>{unit}</div>, <div className='cart'><Link to='/shopping_cart'>\r\n                    ПЕРЕЙТИ В КОРЗИНУ\r\n                </Link></div>]\r\n            : <div>Пожалуйста, отметьте галочками несоклько товаров</div>;\r\n            let goods=[];\r\n        this.props.data.forEach((good)=>{\r\n            goods.push(<Goods__good\r\n                key={good.id}\r\n                idField={good.id}\r\n                name={good.name}\r\n                rating={good.rating}\r\n                trand={good.trand}\r\n                priceSegment={good.priceSegment}\r\n                comments={good.comments.length}\r\n                checked={good.checked}\r\n                check={(id)=>this.check(id)}\r\n            />);\r\n        });\r\n        return (\r\n            <div>\r\n                <div className=\"container\">\r\n                    <h1>Список товаров</h1>\r\n                    <ul>\r\n                        <Goods__Header\r\n                            idField=\"#\"\r\n                            name=\"Название\"\r\n                            rating='Рейтинг'\r\n                            trand=\"Тренд\"\r\n                            priceSegment=\"Ценовой сегмент\"\r\n                            comments='Отзывы'\r\n                            checked='В корзину'\r\n                        />\r\n                        {goods}\r\n                    </ul>\r\n                </div>\r\n                <div className={resultType}>{result}</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        data: state.data.data,\r\n    };\r\n}\r\n\r\nexport default  connect(mapStateToProps)(Goods);\r\n","import React from 'react';\r\nimport connect from \"react-redux/es/connect/connect\";\r\nimport './ShoppingCart.css';\r\n\r\nlet advantages = [\r\n    'Мы классные.',\r\n    'Мы классные и очень-очень крутые.',\r\n    'Даже сложно описать нашу крутость :)'\r\n\r\n];\r\n\r\nclass ShoppingCart extends React.Component {\r\n    render() {\r\n        let checked = this.props.data.filter((good) => good.checked);\r\n        let unit;\r\n        switch (checked.length) {\r\n            case 0: {\r\n                unit = ' товарв:';\r\n                break;\r\n            }\r\n            case 1: {\r\n                unit = ' товар:';\r\n                break;\r\n            }\r\n            case 2: {\r\n                unit = ' товара:';\r\n                break;\r\n            }\r\n            case 3: {\r\n                unit = ' товара:';\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n        let result = [<div>Вы выбрали </div>,\r\n            <div className='number'>{' ' + checked.length + ' '}</div>,\r\n            <div>{unit}</div>];\r\n        let goods = [];\r\n        checked.forEach((good) => {\r\n            goods.push(good.name);\r\n        });\r\n        let advantageBlock = advantages.map((advantage, index) => <div className='advantage'>\r\n            <div className='advantageNum'>{index + 1}</div>\r\n            <div className='advantageText'>{advantage}</div>\r\n        </div>);\r\n        return (\r\n            <div className=\"container\">\r\n                <h1>Корзина</h1>\r\n                <div className=\"shopping_result\">\r\n                    {result}\r\n                    <div>\r\n                        {goods.join(', ')}\r\n                    </div>\r\n                </div>\r\n                <h2>Преимущества покупок у нас</h2>\r\n                <div className=\"advantages\">\r\n                    {advantageBlock}\r\n                </div>\r\n                <div className=\"separator\"></div>\r\n                <div className=\"forU\">И это все - для вас!</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        data: state.data.data,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(ShoppingCart);\r\n","import React, {Component} from 'react';\r\nimport './App.css';\r\nimport {Provider} from 'react-redux';\r\nimport store from '../../store/store';\r\nimport {Router, Route, IndexRoute, browserHistory,} from 'react-router';\r\n\r\n\r\nimport Layout from '../layout/Layout';\r\nimport Main from '../main/Main';\r\nimport Goods from '../goods/Goods';\r\nimport ShoppingCart from '../shopping-cart/ShoppingCart';\r\nimport PageNotFound from '../page-not-found/PageNotFound';\r\n\r\nclass App extends Component {\r\n    render() {\r\n\r\n\r\n        return (\r\n            <Provider store={store}>\r\n                <Router history={browserHistory}>\r\n                    <Route path='/' component={Layout}>\r\n                        <IndexRoute component={Main}/>\r\n                        <Route path='goods' component={Goods}/>\r\n                        <Route path='shopping_cart' component={ShoppingCart}/>\r\n                        <Route path=\"*\" component={Main}/>\r\n                    </Route>\r\n                </Router>\r\n            </Provider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\n\r\nexport default class PageNotFound extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Страница не найдена</h1>\r\n                <p>Error 404!</p>\r\n            </div>\r\n        );\r\n    }\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/app/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}